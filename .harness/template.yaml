pipeline:
  name: PLS
  identifier: PLS
  projectIdentifier: default_project
  orgIdentifier: default
  tags:
    Project: <+project.name>
    Environment: <+env.name>
    Pipeline: <+pipeline.name>
    ManagedBy: Harness
    Owner: Kiran
  stages:
    - stage:
        name: DEPLOY
        identifier: DEPLOY
        description: ""
        type: Deployment
        spec:
          deploymentType: ECS
          service:
            serviceRef: pls
          environment:
            environmentRef: Dev
            deployToAll: false
            infrastructureDefinitions:
              - identifier: ecs_infra
          execution:
            steps:
              - step:
                  type: CreateStack
                  name: Create CloudFormation Stack
                  identifier: CreateStack_1
                  timeout: 10m
                  spec:
                    provisionerIdentifier: pls_provisioner
                    configuration:
                      stackName: pls-stack
                      connectorRef: AWS
                      region: us-east-1
                      roleArn: ""
                      templateFile:
                        type: Remote
                        spec:
                          store:
                            type: Github
                            spec:
                              connectorRef: kiran
                              repoName: Linux-Project
                              gitFetchType: Branch
                              branch: main
                              paths:
                                - .harness/infra.yaml
                      tags:
                        type: Inline
                        spec:
                          content: |-
                            Project: "<+project.name>"
                            Environment: "<+env.name>"
                            Pipeline: "<+pipeline.name>"
                            ManagedBy: "Harness"
                            Owner: "Kiran"
            rollbackSteps: []
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
